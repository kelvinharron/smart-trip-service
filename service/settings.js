/**
 *  service/settings.js - Used to setup valuable parameters such as host location, database location, API keys etc.
 *
 *  To access a config variable, this file needs to be required like 'config = require('./service.config')
 *  then config.server.host to get the server host.
 *  TODO: attempt to separate config into separate production and development branches
 */
var config = {
    server: {
        host: 'localhost', // local machine
        port: '54321' // port set on my local machine
    },
    database: {
        SALT_WORK_FACTOR: 10,
        promise: 'global.Promise', // promises used for async compute, represents potential values
        port: 'mongodb://localhost/itineraryapp' // location of the database on my machine
    },
    auth: {
        secret: 'penguinsrule' // Stub value for attempt at json web token integration
    },
    morgan: {
        format: '| METHOD = :method. URL = :url. STATUS = :status. ' +
        'RESPONSE TIME = :response-time ms. DATE+TIME = :date[web].' // console format for API trace
    },
    google: {
        mapsKey: 'AIzaSyCnUJXB3cayrrPNHVatu3HQWeDfrwb2gZ4', // maps key generated by google api used in places search
        venueTypeEnums: '[art_gallery, cafe, restaurant, night_club, bar, store, movie_theater]', // from google places api
        SEARCH_RADIUS: 2000,
        ZER0_RESULTS: 200,
        MIN_LOOP: 0,
        MAX_LOOP: 9 // Max search results limited to 10
    },
    validation: {
        MINIMUM_PASSWORD_LENGTH: 10,
        MAXIMUM_PASSSWORD_LENGTH: 72
    },
    http: {
        SUCCESS_RESPONSE_CODE: 200,
        CONFLICT_RESPONSE_CODE: 409,
        BAD_RESPONSE_CODE: 400,
        UNAUTH_RESPONSE_CODE: 401,
        NOTFOUND_RESPONSE_CODE: 404
    },
    responses: {
        VENUE_CREATED_SUCCESS: "Venue was created",
        VENUE_DELETED_SUCCESS: "Venue was deleted",
        TRIP_CREATED_SUCCESS: "Trip was created",
        TRIP_DELETED_SUCCESS: "Trip was deleted",
        BAD_EMAIL_PASSWORD: 'Please enter a valid email address and password',
        BAD_TRIP_DETAILS: 'Please fill in a trip name and city',
        BAD_VENUE_DETAILS: 'Please check your location services are working and try again',
        EMAIL_USED: 'Email already in use. Please choose another',
        LOGIN_SUCCESS: 'Welcome back!',
        SIGNUP_SUCCESS: 'Successfully created your account',
        NOT_FOUND: 'Not found',
        NO_VENUES_FOUND: 'No venues available, please check your location and try again'
    }
};

// Object returns access to all routes when required by other node js files
module.exports = config;